@model AIA.Models.tbl_r_menu
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="margin-bottom: 20px;">
    <button onclick="btnAdd()" class="btn btn-primary btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-plus"></i>
        </span>
        <span class="text">Add Data</span>
    </button>
</div>


<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">MASTER - @ViewBag.Title</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" width="100%" id="tableBS" cellspacing="0">
                <thead>
                    <tr>
                        <th>TITLE</th>
                        <th>KATEGORI USER</th>
                        <th>TYPE</th>
                        <th>LINK</th>
                        <th>HIDDEN</th>
                        <th>NEW TAB</th>
                        <th>AKSI</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>


<!-- Modal Add/Update -->
<div class="modal fade modalBS" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">FORM @ViewBag.Title</h4>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="formBS" class="forms-sample">
                    <div class="form-group row">
                        <label for="nrp" class="col-sm-3 col-form-label">Title</label>
                        <div class="col-sm-9">
                            @Html.HiddenFor(Model => Model.id)
                            @Html.HiddenFor(Model => Model.insert_by)
                            @Html.HiddenFor(Model => Model.ip)
                            @Html.HiddenFor(Model => Model.created_at)
                            @Html.HiddenFor(Model => Model.updated_at)
                            <input type="text" class="form-control" id="title" name="title" placeholder="Masukkan title" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="nrp" class="col-sm-3 col-form-label">Kategori User</label>
                        <div class="col-sm-9">
                            <select class="form-control form-control-md" id="kategori_user_id" name="kategori_user_id" required>
                                <option value="">- Pilih kategori user -</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="nrp" class="col-sm-3 col-form-label">Type</label>
                        <div class="col-sm-9">
                            <select class="form-control form-control-md" id="type" name="type" required>
                                <option value="">- Pilih kategori -</option>
                                <option value="General">General</option>
                                <option value="Master">Master</option>
                                <option value="OPA">Bandara</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="nrp" class="col-sm-3 col-form-label">Link</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="link_controller" name="link_controller" placeholder="Controller" required>
                        </div>
                        <div class="col-sm-5">
                            <input type="text" class="form-control" id="link_function" name="link_function" placeholder="Function" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="nrp" class="col-sm-3 col-form-label">Hidden</label>
                        <div class="col-sm-9">
                            <select class="form-control form-control-md" id="hidden" name="hidden" required>
                                <option value="">- Pilih hidden -</option>
                                <option value="true">True</option>
                                <option value="false">False</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="nrp" class="col-sm-3 col-form-label">New Tab</label>
                        <div class="col-sm-9">
                            <select class="form-control form-control-md" id="new_tab" name="new_tab" required>
                                <option value="">- Pilih opsi new tab -</option>
                                <option value="true">True</option>
                                <option value="false">False</option>
                            </select>
                        </div>
                    </div>
                    <button type="button" id="btnSave" onclick="insertData()" class="btn btn-success mr-2">Save</button>
                    <button type="button" id="btnUpdate" onclick="updateData()" class="btn btn-success mr-2">Update</button>
                    <button type="button" data-dismiss="modal" class="btn btn-light">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>
@* End Modal *@

@section styles {
    <link href="~/Assets/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <style>
        .checkbox-menu li label {
            display: block;
            padding: 3px 10px;
            clear: both;
            font-weight: normal;
            line-height: 1.42857143;
            color: #333;
            white-space: nowrap;
            margin:0;
            transition: background-color .4s ease;
        }
        .checkbox-menu li input {
            margin: 0px 5px;
            top: 2px;
            position: relative;
        }

        .checkbox-menu li.active label {
            background-color: #cbcbff;
            font-weight:bold;
        }

        .checkbox-menu li label:hover,
        .checkbox-menu li label:focus {
            background-color: #f5f5f5;
        }

        .checkbox-menu li.active label:hover,
        .checkbox-menu li.active label:focus {
            background-color: #b8b8ff;
        }
    </style>
}

@section scripts {
    <script src="~/Assets/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Assets/vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script>
        var link = '@Url.Action("Function", "Controller")'
        var controller_name = "@ViewBag.Controller"
        var a
        var dataTable

        $(document).ready(function () {
            console.log("@ViewBag.Menu")
            console.log('lol')
            getCredentials()
            getAll()
            getKategoriUser()
        })

        function btnAdd() {
            $('#btnSave').show()
            $('#btnUpdate').hide()
            $('.modalBS').modal('show');
            $('#formBS').trigger("reset")
        }

        function btnEdit(id) {
            $('#btnSave').hide()
            $('#btnUpdate').show()
            $('#formBS').trigger("reset")
            getData(id)
            $('.modalBS').modal('show')
        }

        function getCredentials() {
            //GetNRP
            $('#insert_by').val("@Html.Raw(ViewBag.insert_by)")
        }

        function getAll() {
            link = link.replace("Controller", controller_name);
            link = link.replace("Function", "GetAll");

            dataTable = $("#tableBS").DataTable({
                    "order": [[1, "desc"]],
                    "ajax": {
                        "url": link,
                    "type": "GET",
                    "datatype": "json"
                },
                    "columns": [
                        { "data": "title" },
                        {
                            "data": function (data, type, dataToSet) {
                                if (data.kategori_user_id == 'ADMINISTRATOR') {
                                    return '<span class="badge badge-pill badge-primary">' + data.kategori_user_id + '</span>'
                                } else if (data.kategori_user_id == 'USER SHE') {
                                    return '<span class="badge badge-pill badge-success">' + data.kategori_user_id + '</span>'
                                } else {
                                    return '<span class="badge badge-pill badge-warning">' + data.kategori_user_id + '</span>'
                                }
                            }
                        },
                        { "data": "type" },
                        {
                            "data": function (data, type, dataToSet) {
                                return data.link_controller + '/' + data.link_function
                            }
                        },
                        {
                            "data": function (data, type, dataToSet) {
                                if (data.hidden == 'true') {
                                    return '<span class="badge badge-pill badge-success">' + data.hidden + '</span>'
                                } else {
                                    return '<span class="badge badge-pill badge-danger">' + data.hidden + '</span>'
                                }
                            }
                        },
                        {
                            "data": function (data, type, dataToSet) {
                                if (data.new_tab == 'true') {
                                    return '<span class="badge badge-pill badge-success">' + data.new_tab + '</span>'
                                } else {
                                    return '<span class="badge badge-pill badge-danger">' + data.new_tab + '</span>'
                                }
                            }
                        },
                        {
                            "data": "id", "render": function (data) {
                                var a = '<button onclick="btnEdit(' + data + ')" class="btn btn-info btn-circle btn-sm">'
                                    a += '  <i class="fas fa-edit"></i>'
                                    a += '</button>'
                                    a += '<button onclick="deleteData(' + data + ')" class="btn btn-danger btn-circle btn-sm" style="margin-left: 5px;">'
                                    a += '  <i class="fa fa-trash"></i>'
                                    a += '</button>'
                                return a
                            },
                            "orderable": false,
                            "width": "180px",
                            "searchable": false
                        }
                    ],
                    "language": {
                        "emptyTable": "Tidak ada data"
                    }
            })
            link = '@Url.Action("Function", "Controller")'
        }

        function getData(id) {
            link = link.replace("Controller", controller_name);
            link = link.replace("Function", "Get");

            $.ajax({
                type: "GET",
                url: link + '/' + id,
                success: function (data) {
                    if (data.status) {
                        $('#id').val(data.data.id)
                        $('#kategori_user_id').val(data.data.kategori_user_id)
                        $('#title').val(data.data.title)
                        $('#type').val(data.data.type)
                        $('#link_controller').val(data.data.link_controller)
                        $('#link_function').val(data.data.link_function)
                        $('#hidden').val(data.data.hidden)
                        $('#new_tab').val(data.data.new_tab)
                    } else {
                        alert(data.data)
                    }
                }
            })
            link = '@Url.Action("Function", "Controller")'
        }

        function insertData() {
            link = link.replace("Controller", controller_name);
            link = link.replace("Function", "Insert");

            $.ajax({
                type: "POST",
                url: link,
                data: $('#formBS').serialize(),
                success: function (data) {
                    if (data.status) {
                        $('.modalBS').modal('hide');
                        dataTable.ajax.reload();
                        alertify.notify('Data berhasil disimpan', 'success', 5)
                    } else {
                        alert(data.data)
                    }
                }
            })
            link = '@Url.Action("Function", "Controller")'
        }

        function updateData(id) {
            link = link.replace("Controller", controller_name);
            link = link.replace("Function", "Update");

            $.ajax({
                type: "POST",
                url: link,
                data: $('#formBS').serialize(),
                success: function (data) {
                    if (data.status) {
                        $('.modalBS').modal('hide');
                        dataTable.ajax.reload();
                        alertify.notify('Data berhasil diubah', 'success', 5)
                    } else {
                        alert(data.data)
                    }
                }
            })
            link = '@Url.Action("Function", "Controller")'
        }

        function deleteData(id) {
            link = link.replace("Controller", controller_name);
            link = link.replace("Function", "Delete");

            if (confirm('Are u sure?')) {
                $.ajax({
                    type: 'POST',
                    url: link + '/' + id,
                    success: function (data) {
                        if (data.status) {
                            dataTable.ajax.reload();
                            alertify.notify('Data berhasil dihapus', 'success', 5)
                        } else {
                            alert(data.data)
                        }
                    }
                })
            }
            link = '@Url.Action("Function", "Controller")'
        }

        function getKategoriUser() {
            var options = $("#kategori_user_id");
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAll", "KategoriUser")',
                success: function (data) {
                    if (data.status) {
                        for (a = 0; a < data.data.length; a++) {
                            options.append($("<option />").val(data.data[a].kategori).text(data.data[a].kategori));
                        }
                    } else {
                        alert(data.data)
                    }
                }
            })
        }

    </script>
}